import { BinObject, EBinaryFieldType } from "../../shared/structures/BinObject";
/**
 * NPS LobbyInfo structure
 *
 * @export
 * @class LobbyList
 * @extends {BinObject}
 */
export class LobbyInfo extends BinObject {
  private MC_MAX_NPS_RIFF_NAME = 32;
  private MC_NAME_LENGTH = 13;
  private MAX_CLUB_NAME_LENGTH = 33;
  protected _fields = [
    {
      name: "lobbyID",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "4 bytes",
    },
    {
      name: "raceTypeID",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "4 bytes",
    },
    {
      name: "turfID",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "4 bytes",
    },
    {
      name: "NPSRiffName",
      type: EBinaryFieldType.STRING,
      size: this.MC_MAX_NPS_RIFF_NAME,
      value: Buffer.alloc(this.MC_MAX_NPS_RIFF_NAME),
      notes: "",
    },
    {
      name: "eTurfName",
      type: EBinaryFieldType.STRING,
      size: 256,
      value: Buffer.alloc(256),
      notes: "",
    },
    {
      name: "clientArt",
      type: EBinaryFieldType.STRING,
      size: 11,
      value: Buffer.alloc(11),
      notes: "",
    },
    {
      name: "elementID",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "4 bytes",
    },
    {
      name: "turfLength",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "4 bytes",
    },
    {
      name: "startSlice",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "4 bytes",
    },
    {
      name: "endSlice",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "4 bytes",
    },
    {
      name: "dragStageLeft",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "float",
    },
    {
      name: "dragStageRight",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "float",
    },
    {
      name: "dragStagingSlice",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "gridSpreadFactor",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "float",
    },
    {
      name: "linear",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool?",
    },
    {
      name: "numplayersmin",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "numplayersmax",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "numplayersdefault",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "bnumplayersenabled",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool",
    },
    {
      name: "numlapsmin",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "numlapsmax",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "numlapsdefault",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "bnumlapsenabled",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool",
    },
    {
      name: "numroundsmin",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "numroundsmax",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "numroundsdefault",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "bnumroundsenabled",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool",
    },
    {
      name: "bweatherdefault",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool",
    },
    {
      name: "bweatherenabled",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool",
    },
    {
      name: "bnightdefault",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool",
    },
    {
      name: "bnightenabled",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool",
    },
    {
      name: "bbackwarddefault",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool",
    },
    {
      name: "bbackwardenabled",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool",
    },
    {
      name: "",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "btrafficdefault",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool",
    },
    {
      name: "bdamagedefault",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "bdamageenabled",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "_baidefault",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "baienabled",
      type: EBinaryFieldType.BOOLEAN,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "topDog",
      type: EBinaryFieldType.STRING,
      size: this.MC_NAME_LENGTH,
      value: Buffer.alloc(this.MC_NAME_LENGTH),
      notes: 'Also used for TimeTrial\'s "Last Weeks Champion"?',
    },
    {
      name: "turfOwner",
      type: EBinaryFieldType.STRING,
      size: this.MAX_CLUB_NAME_LENGTH,
      value: Buffer.alloc(this.MAX_CLUB_NAME_LENGTH),
      notes: "",
    },
    {
      name: "qualifyingTime",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "clubNumPlayers",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "clubNumLaps",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "clubNumRounds",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "clubNight",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "clubWeather",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "clubBackwards",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "Bool?",
    },
    {
      name: "bestLapTime",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "in (64hz ticks)",
    },
    {
      name: "lobbyDifficulty",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttPointForQualify",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttCashForQualify",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttPointBonusFasterIncs",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttCashBonusFasterIncs",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttTimeIncrements",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttvictory_1st_point",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttvictory_1st_cash",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttvictory_2nd_points",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttvictory_2nd_cash",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttvictory_3rd_points",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "ttvictory_3rd_cash",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "minLevel",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "minResetSlice",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "maxResetSlice",
      type: EBinaryFieldType.NUMBER,
      size: 4,
      value: Buffer.alloc(4),
      notes: "",
    },
    {
      name: "newbieFlag",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool?",
    },
    {
      name: "driverHelmetFlag",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "bool?",
    },
    {
      name: "clubNumPlayersMax",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "clubNumPlayersMin",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "clubNumPlayersDefault",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "numClubsMax",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "numClubsMin",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "racePointsFactor",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "float",
    },
    {
      name: "bodyClassMax",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "powerClassMax",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "",
    },
    {
      name: "partPrizesMax",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "max allowed for this lobby",
    },
    {
      name: "partPrizesWon",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "current users prizes for this lobby",
    },
    {
      name: "clubLogoID",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "Logo ID for Turf owner",
    },
    {
      name: "bteamtrialweather",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "Team Trials Weather Flag",
    },
    {
      name: "bteamtrialnight",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "Team Trials Night Flag",
    },
    {
      name: "bteamtrialbackward",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "Team Trials Backwards Flag",
    },
    {
      name: "teamtrialnumlaps",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "Team Trials Number of Laps",
    },
    {
      name: "teamtrialbaseTUP",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "Team Trials Base Time Under Par",
    },
    {
      name: "raceCashFactor",
      type: EBinaryFieldType.NUMBER,
      size: 2,
      value: Buffer.alloc(2),
      notes: "float",
    },
  ];
}
