version: '3.4'

services:
  mcoserver:
    image: mcoserver
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 80
      - 443
    labels:
      - "traefik.http.routers.bin.rule=Host(`bin.docker.localhost`)"
  router:
    image: router
    build:
      context: .
      dockerfile: packages/router/Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 80
      - 443
    labels:
      - "traefik.http.routers.bin.rule=Host(`router.docker.localhost`)"      
  reverse-proxy:
      # The official v2 Traefik docker image
      image: traefik:v2.5
      # Enables the web UI and tells Traefik to listen to docker
      command: --api.insecure=true --providers.docker
      ports:
        # The HTTP port
        - "80:80"
        # The Web UI (enabled by --api.insecure=true)
        - "8080:8080"
      volumes:
        # So that Traefik can listen to the Docker events
        - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: postgres:14.0
    ports: 
      - "5432:5432"
    environment: 
      - "POSTGRES_PASSWORD=password"      
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"      
  pgadmin:
      image: dpage/pgadmin4:5.7
      environment:
          PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
          PGADMIN_DEFAULT_PASSWORD: password
          PGADMIN_LISTEN_PORT: 80
      ports:
          - 15432:80
      volumes:
          - pgadmin:/var/lib/pgadmin
      depends_on:
          - db
volumes:
  pgadmin: